/*{This application to help developers create apps faster by collecting
 * the most used methods for android apps in one place, all you
 * have is to call the method you need and receive the results}
 Copyright (C) {2014} {Ahmad Sameer AlBarqawi} {iAraby}

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

 For contact you can reach me on twitter: @Barqawi88
 */
package com.iaraby.utility;

import android.util.Log;

/**
 * Log manager aim to control log debug status so no need to search for every
 * debug log when you want to turn off debug logs on release It is recommended
 * to disable debug logs on release for performance issues and to prevent
 * Analyze your app form other developers
 * 
 * Tutorial - Make sure for all debug logs call: LogManager.getIns().debug() -
 * On release call: LogManager.getIns().setDebug(false) on the first activity or
 * on application class
 */
public class LogManager {

	private static LogManager instance;
	private boolean isDebug;

	public static LogManager getIns() {
		if (instance == null) {
			instance = new LogManager();
		} // check if instance did not created
		return instance;
	} // method: get the only instance

	public void setDebug(boolean res) {
		isDebug = res;
	}

	/**
	 * Call debug with respect to setDebug method
	 * @param String title of debug (common to use app name)
	 * @param Sting info to debug 
	 */
	public void d(String title, String info) {
		if (isDebug)
			Log.d(title, info);
	}

	/**
	 * Always call debug regardless the value of setDebug method
	 * @param String title of debug (common to use app name)
	 * @param Sting info to debug 
	 */
	public void dAlways(String title, String info) {
		Log.d(title, info);
	}

	public void error(String tag, String info) {
		Log.e(tag, info);
	} // method: print error

	public void logError(String tag, String info, Exception e) {
		Log.e(tag, info, e);
	} // method: print error
}
